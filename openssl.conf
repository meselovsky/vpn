[ ca ]
default_ca = CA_default

[ CA_default ]
certs             = $SERVER_PKI_CERTS_DIR
new_certs_dir     = $SERVER_PKI_INDEX_DIR
private           = $SERVER_PKI_PRIVATE_DIR
crl_dir           = $SERVER_PKI_DIR
database          = $SERVER_PKI_INDEX
serial            = $SERVER_PKI_SERIAL
unique_subject    = no

private_key      = $PKI_CA_KEY
certificate      = $PKI_CA_CERT
crlnumber        = $SERVER_PKI_CRLNUM
crl              = $SERVER_PKI_CLR
crl_extensions   = crl_ext
default_crl_days = 30

default_md = sha1

name_opt = ca_default
cert_opt = ca_default

default_days = 365
preserve = no
policy = policy_root
email_in_dn = no 

[ policy_root ]
countryName = optional
stateOrProvinceName = optional
organizationName = optional
organizationalUnitName = optional
commonName = optional
emailAddress = optional
subjectAltName = optional


[ req ]
default_bits = 2048
# distinguished_name = req_distinguished_name
string_mask = utf8only
default_md = sha1

# Расширение при использовании опции -x509.
x509_extensions = root_ca

[ root_ca ]
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ intermediate_ca ]
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true, pathlen:0
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ server_cert ]
basicConstraints = CA:FALSE
nsCertType = server
nsComment = "Server Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth

[ user_cert ]
basicConstraints = CA:FALSE
nsCertType = client, email
nsComment = "Client certificates"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment

[ crl_ext ]
# issuerAltName=issuer:copy  #this would copy the issuer name to altname
authorityKeyIdentifier=keyid:always